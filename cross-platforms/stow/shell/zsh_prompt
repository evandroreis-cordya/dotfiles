#!/bin/zsh

# Enable color support
function enable_color_support() {
    if [[ $COLORTERM == gnome-* && $TERM == xterm ]] \
        && infocmp gnome-256color &> /dev/null; then
        export TERM="gnome-256color"
    elif infocmp xterm-256color &> /dev/null; then
        export TERM="xterm-256color"
    fi
    
    # Load OS specific color support
    source "colors/$OS/zsh_colors"
}

# Get git repository details
function get_git_repository_details() {
    local branchName=""
    local tmp=""
    
    # Check if the current directory is in a Git repository
    ! git rev-parse &>/dev/null && return
    
    # Check if in `.git/` directory
    [[ "$(git rev-parse --is-inside-git-dir)" == "true" ]] && return
    
    # Check for uncommitted changes in the index
    if ! git diff --quiet --ignore-submodules --cached; then
        tmp="$tmp+"
    fi
    
    # Check for unstaged changes
    if ! git diff-files --quiet --ignore-submodules --; then
        tmp="$tmp!"
    fi
    
    # Check for untracked files
    if [[ -n "$(git ls-files --others --exclude-standard)" ]]; then
        tmp="$tmp?"
    fi
    
    # Check for stashed files
    if git rev-parse --verify refs/stash &>/dev/null; then
        tmp="$tmp$"
    fi
    
    [[ -n "$tmp" ]] && tmp=" [$tmp]"
    
    branchName="$(printf "%s" "$(git rev-parse --abbrev-ref HEAD 2> /dev/null \
        || git rev-parse --short HEAD 2> /dev/null \
        || printf " (unknown)")" | tr -d "\n")"
    
    printf "%s" "$1$branchName$tmp"
}

# Set prompts
function set_prompts() {
    local bold=$(tput bold 2> /dev/null)
    local reset=$(tput sgr0 2> /dev/null)
    
    local cyan=""
    local green=""
    local orange=""
    local white=""
    local yellow=""
    
    if [[ "$(tput colors 2> /dev/null || printf "0")" -ge 256 ]]; then
        # Solarized colors
        cyan=$(tput setaf 37)
        green=$(tput setaf 64)
        orange=$(tput setaf 166)
        white=$(tput setaf 15)
        yellow=$(tput setaf 136)
    fi
    
    # Prompt Statement variables
    # ------------------------------------------------------------------
    # | PROMPT - Default interactive prompt                             |
    # ------------------------------------------------------------------
    
    PROMPT="%{$reset%}%{$bold%}"
    PROMPT+="%{$orange%}%n"        # Username
    PROMPT+="%{$white%}@"
    PROMPT+="%{$yellow%}%m"        # Host
    PROMPT+="%{$white%}: "
    PROMPT+="%{$green%}%~"         # Working directory
    PROMPT+="\$(get_git_repository_details \"%{$white%} on %{$cyan%}\")"
    PROMPT+=$'\n'
    PROMPT+="%{$reset%}%{$white%}$ %{$reset%}"
    
    # ------------------------------------------------------------------
    # | PROMPT2 - Continuation interactive prompt                       |
    # ------------------------------------------------------------------
    
    PROMPT2="âš¡ "
    
    # ------------------------------------------------------------------
    # | PROMPT3 - Selection prompt                                      |
    # ------------------------------------------------------------------
    
    PROMPT3="%{$yellow%}?%{$reset%} "
    
    # ------------------------------------------------------------------
    # | PROMPT4 - Debug prompt                                         |
    # ------------------------------------------------------------------
    
    PROMPT4="+%{$reset%}"
}

# Main function
function main() {
    enable_color_support
    set_prompts
}

main

# Cleanup
unset -f enable_color_support
unset -f main
unset -f set_prompts 